generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model roles {
  idrol       Int        @id @default(autoincrement())
  nombre      String     @unique @db.VarChar(50)
  descripcion String     @db.VarChar(100)
  usuarios    usuarios[]
}

model usuarios {
  idusuario           Int                   @id @default(autoincrement())
  nombre              String                @db.VarChar(100)
  apellido            String                @db.VarChar(100)
  email               String                @unique @db.VarChar(150)
  username            String                @unique @db.VarChar(50)
  password            String
  activo              Boolean?              @default(true)
  fechaalta           DateTime?             @default(dbgenerated("CURRENT_DATE")) @db.Date
  idrol               Int?
  inventario_entradas inventario_entradas[]
  roles               roles?                @relation(fields: [idrol], references: [idrol], onDelete: NoAction, onUpdate: NoAction)

  @@index([idrol])
  @@index([activo])
  @@index([activo], map: "idx_usuarios_activo")
  @@index([idrol], map: "idx_usuarios_idrol")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model clientes {
  idcliente    Int       @id @default(autoincrement())
  nombre       String    @db.VarChar(100)
  apellido     String    @db.VarChar(100)
  email        String?   @db.VarChar(150)
  telefono     String?   @unique(map: "clientes_telefono_unique") @db.VarChar(25)
  direccion    String?
  fechaingreso DateTime? @default(dbgenerated("CURRENT_DATE")) @db.Date
  ultimacompra DateTime? @db.Date

  @@index([apellido, nombre], map: "idx_clientes_apellido_nombre")
  @@index([fechaingreso], map: "idx_clientes_fechaingreso")
  @@index([telefono], map: "idx_clientes_telefono")
  @@index([ultimacompra], map: "idx_clientes_ultimacompra")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model productos {
  idproducto           Int                   @id @default(autoincrement())
  sku                  String                @db.VarChar(50)
  nombre               String                @db.VarChar(120)
  descripcion          String?
  categoria            String?               @db.VarChar(80)
  medida               String?               @db.VarChar(20)
  precioventa          Decimal               @db.Decimal(12, 2)
  stock                Int                   @default(0)
  activo               Boolean               @default(true)
  duracionestimadodias Int?
  fechaalta            DateTime              @default(dbgenerated("CURRENT_DATE")) @db.Date
  fechamod             DateTime              @default(now()) @db.Timestamptz(6)
  inventario_entradas  inventario_entradas[]

  @@index([categoria], map: "idx_productos_categoria")
  @@index([nombre(ops: raw("gin_trgm_ops"))], map: "idx_productos_nombre_trgm", type: Gin)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model inventario_entradas {
  identrada    Int       @id @default(autoincrement())
  idproducto   Int
  idusuario    Int?
  cantidad     Int
  preciocosto  Decimal   @db.Decimal(12, 2)
  fechaentrada DateTime  @default(dbgenerated("CURRENT_DATE")) @db.Date
  proveedor    String?   @db.VarChar(120)
  productos    productos @relation(fields: [idproducto], references: [idproducto])
  usuarios     usuarios? @relation(fields: [idusuario], references: [idusuario])

  @@index([fechaentrada], map: "idx_inv_ent_fecha")
  @@index([idproducto], map: "idx_inv_ent_idproducto")
  @@index([idusuario], map: "idx_inv_ent_idusuario")
}
